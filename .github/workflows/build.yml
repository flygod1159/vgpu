name: Build

on:
  push:
    branches:
      - 'main'
    paths-ignore:
      - 'docs/**'
      - '*.md'
  pull_request:
    paths-ignore:
      - 'docs/**'
      - '*.md'

env:
  # Indicates the CMake build directory where project files and binaries are being produced.
  CMAKE_BUILD_DIR: ${{ github.workspace }}/build/
  VGPU_SAMPLES: ON

jobs:
  build:
    strategy:
      matrix:
        os: [windows, ubuntu, macos]
        
    name: ${{matrix.os}}
    runs-on: ${{matrix.os}}-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        
      # Setup the build machine with the most recent versions of CMake and Ninja. Both are cached if not already: on subsequent runs both will be quickly restored from GitHub cache service.
      - uses: lukka/get-cmake@latest  
      
      # On Windows runners, let's ensure to have the Developer Command Prompt environment setup correctly. As used here the Developer Command Prompt created is targeting x64 and using the default the Windows SDK.
      - uses: ilammy/msvc-dev-cmd@v1

      # Run CMake to generate Ninja project files
      - name: Generate project files
        run: cmake -B "${{ env.CMAKE_BUILD_DIR }}" -GNinja -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX="SDK"

      # Build the whole project with Ninja (which is spawn by CMake).          
      - name: Build
        run: cmake --build "${{ env.CMAKE_BUILD_DIR }}" --target install

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: '${{matrix.os}} SDK'
          path: ${{ github.workspace }}/SDK          